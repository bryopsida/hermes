on:
  push:
  workflow_dispatch:
jobs:
  wireguard:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      # create connection to the cluster
      - name: Install Wireguard
        run: |
          sudo apt-get update
          sudo apt-get install -y wireguard resolvconf
      - name: Create Wireguard Config
        run: |
          cat <<EOF >> ./wg0.conf
          [Interface]
          PrivateKey = ${{ secrets.WG_PRIVATE_KEY }}
          Address = ${{ secrets.WG_CLIENT_IP }}/32
          PostUp = ${{ secrets.WG_POST_UP }}
          PostDown = ${{ secrets.WG_POST_DOWN }}

          [Peer]
          PublicKey = ${{ secrets.WG_AP_PUBLIC_KEY }}
          AllowedIPs = ${{ secrets.WG_AP_ALLOWED_IPS}}
          Endpoint = ${{ secrets.WG_AP_ENDPOINT }}
          PersistentKeepalive = 25
          EOF
          sudo cp ./wg0.conf /etc/wireguard/wg0.conf
      - name: Connect To Wireguard
        timeout-minutes: 5
        run: |
          sudo wg-quick up wg0 || exit 1
      - name: Check Wireguard Connection
        timeout-minutes: 5
        run: |
          ip addr
          ping -c 1 -W 1 ${{ secrets.WG_TEST_IP}}
          ping -c 1 -W 1 ${{ secrets.TEST_IP}}
      # deploy to the lab 
      # clean up
      - name: Cleanup Wireguard
        timeout-minutes: 4
        if: always()
        run: |
          sudo wg-quick down wg0
          sudo shred -u /etc/wireguard/wg0.conf
          shred -u ./wg0.conf