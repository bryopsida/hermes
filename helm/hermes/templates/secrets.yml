{{- if not .Values.redisExistingSecretName }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-internal-redis
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install
data:
  redisPassword: {{ randAlphaNum 32 | b64enc | quote }}
{{- end }}
{{- if not .Values.mongoDbExistingSecret }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-internal-mongodb
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-install
type: Opaque
data:
  mongodb-root-password: {{ randAlphaNum 16 | b64enc | quote }}
  mongodb-password: {{ randAlphaNum 16 | b64enc | quote }}
  mongodb-replica-set-key: {{ randAlphaNum 16 | b64enc | quote }}
{{- end }}
{{- if not .Values.fetchCredentialsSecretName }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-internal-hermes-fetch
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  username: {{ .Values.fetchUsername | b64enc | quote }}
  password: {{ .Values.fetchPassword | b64enc | quote }}
{{- end }}
{{/* If a secret is not provided for sealing the key store values, create one with random values */}}
{{- if not .Values.keyStoreSecretName }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-internal-key-store
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  key-store-password: {{ randAscii 32 | b64enc | b64enc | quote }}
  key-store-salt: {{ randAscii 16 | b64enc | b64enc | quote }}
  key-store-context: {{ randAscii 32 | b64enc | b64enc | quote }}
{{- end }}
{{/* If a secret is not provided for the master key, create one using a strong random generator */}}
{{- if not .Values.masterKeySecretName }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-internal-master-key
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  master-key: {{ randAscii 32 | b64enc | b64enc | quote }}
  master-key-context: {{ randAscii 32 | b64enc | b64enc | quote }}
{{- end }}