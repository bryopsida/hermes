apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hermes.fullname" . }}
  labels:
    {{- include "hermes.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hermes.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hermes.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hermes.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-config
            items:
              - key: production.yaml
                path: production.yaml
      containers:
        - name: {{ .Chart.Name }}
          livenessProbe:
            httpGet:
              path: /api/health/v1/alive
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health/v1/ready
              port: http
            initialDelaySeconds: 10
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env: 
          - name: HERMES_TASK_RUNNER_REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-internal-redis"
                key: "redisPassword"
          - name: HERMES_BULLBOARD_REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-internal-redis"
                key: "redisPassword"
          - name: HERMES_WATCHES_MONGODB_USERNAME
            value: "mongodb"
          - name: HERMES_WATCHES_MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-internal-mongodb"
                key: "mongodb-password"
          - name: HERMES_DATA_SOURCES_MONGODB_USERNAME
            value: "mongodb"
          - name: HERMES_DATA_SOURCES_MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-internal-mongodb"
                key: "mongodb-password"
          volumeMounts:
            - name: config-volume
              mountPath: /app/config/
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
