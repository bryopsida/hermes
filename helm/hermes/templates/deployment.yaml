apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hermes.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hermes.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hermes.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hermes.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hermes.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-config
            items:
              - key: production.json
                path: production.json
        {{- if .Values.accountsSecretName }}
        - name: accounts-volume
          secret:
            secretName: {{ .Values.accountsSecretName }}
            items:
              - key: accounts.json
                path: accounts.json
        {{- end }}
        - name: key-store-volume
          secret:
            secretName: {{ .Values.keyStoreSecretName | default (printf "%s-internal-key-store" .Release.Name) }}
            optional: false
            items:
              - key: key-store-password
                path: password
              - key: key-store-salt
                path: salt
              - key: key-store-context
                path: context
        - name: master-key-volume
          secret:
            secretName: {{ .Values.masterKeySecretName | default (printf "%s-internal-master-key" .Release.Name) }}
            optional: false
            items:
              - key: master-key
                path: key
              - key: master-key-context
                path: context
      containers:
        - name: {{ .Chart.Name }}
          livenessProbe:
            httpGet:
              path: /api/health/v1/alive
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health/v1/ready
              port: http
            initialDelaySeconds: 10
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
          env: 
          - name: NODE_CONFIG_DIR
            value: /var/run/config:/usr/src/app/config
          - name: HERMES_KAFKA_BROKER_LIST
            value: "{{ .Release.Name }}-kafka-headless:9092"
          - name: HERMES_SERVER_LISTEN_PORT
            value: "9000"
          - name: HERMES_SERVER_LISTEN_ADDRESS
            value: "0.0.0.0"
          - name: HERMES_TASK_RUNNER_REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-internal-redis"
                key: "redisPassword"
          - name: HERMES_BULLBOARD_REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-internal-redis"
                key: "redisPassword"
          {{/* Key Store Values */}}
          - name: HERMES_MASTER_KEY_PATH
            value: /var/run/secrets/hermes/master/key
          - name: HERMES_MASTER_KEY_CONTEXT_PATH
            value: /var/run/secrets/hermes/master/context
          - name: HERMES_KEY_STORE_PASSWORD_PATH
            value: /var/run/secrets/hermes/key-store/password
          - name: HERMES_KEY_STORE_SALT_PATH
            value: /var/run/secrets/hermes/key-store/salt
          - name: HERMES_KEY_STORE_CONTEXT_PATH
            value: /var/run/secrets/hermes/key-store/context
          - name: HERMES_REDIS_KEY_STORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-internal-redis"
                key: "redisPassword"
          {{/* End Key Store Values */}}
          - name: HERMES_WATCHES_MONGODB_USERNAME
            value: "root"
          - name: HERMES_WATCHES_MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-internal-mongodb"
                key: "mongodb-root-password"
          - name: HERMES_DATA_SOURCES_MONGODB_USERNAME
            value: "root"
          - name: HERMES_DATA_SOURCES_MONGODB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ .Release.Name }}-internal-mongodb"
                key: "mongodb-root-password"
          - name: HERMES_TASK_RUNNER_FETCH_USERNAME
            valueFrom:
              secretKeyRef:
                name: "{{ include "hermes.fetch-secret-name" . }}"
                key: "{{ .Values.fetchUsernameKey }}"
          - name: HERMES_TASK_RUNNER_FETCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "{{ include "hermes.fetch-secret-name" . }}"
                key: "{{ .Values.fetchPasswordKey }}"
          {{- if .Values.accountsSecretName }}
          - name: HERMES_AUTH_USER_STORE_PATH
            value: /var/run/accounts/accounts.json
          {{- end }}
          volumeMounts:
            - name: config-volume
              mountPath: /var/run/config/
              readOnly: true
            {{- if .Values.accountsSecretName }}
            - name: accounts-volume
              mountPath: /var/run/accounts/
              readOnly: true
            {{- end }}
            - name: key-store-volume
              mountPath: /var/run/secrets/hermes/key-store/
              readOnly: true
            - name: master-key-volume
              mountPath: /var/run/secrets/hermes/master/
              readOnly: true
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
